#!/bin/bash

# Usage: usage <exit-code>
# Display the usage of this script.
usage() {
    echo "Usage: bordel [option] <command> [command options]"
    echo "Wrapper to build and deploy an OpenXT image."
    echo "  -h      display this help and exit."
    echo "  -i      id to identify build, default is YYMMDD."
    echo ""
    echo "Command list:"
    describe_cmds
    exit $1
}

# Start by getting relative location exporting them as script globals
BORDEL_DIR="$( cd "$( dirname "$( realpath ${BASH_SOURCE[0]} )" )" >/dev/null 2>&1 && pwd )"
TOP=$(cd ${BORDEL_DIR}/../..; pwd)

cd ${TOP}

# Source in common functions
. ${BORDEL_DIR}/functions

# Source in all the command modules
register_cmds ${BORDEL_DIR}/cmds

# Parse options.
while getopts ":i:h" opt; do
    case $opt in
        h)  usage 0 ;;
        i)  BUILD_ID=${OPTARG}
            ;;
        :)  echo "Option \`${OPTARG}' is missing an argument." >&2
            usage 1
            ;;
        \?) echo -e "Unknown option \`${OPTARG}',\n\twas this intended for the subcommand?." >&2
            usage 1
            ;;
    esac
done
shift $((${OPTIND} - 1))

if [ $# -lt 1 ]; then
    echo "No command specified." >&2
    usage 1
fi

# Sanitize input.
command="$1"
shift 1

if ! valid_cmd "${command}"; then
    echo "Unknown command ${command}." >&2
    usage 1
fi

if [ -n "${BUILD_ID}" ]; then
    BUILD_DIR="build-${BUILD_ID}"
elif [ -e "${TOP}/build" ]; then
    BUILD_DIR=$(basename $(readlink -f "${TOP}/build"))
    BUILD_ID=${BUILD_DIR#*-}
else
    BUILD_ID=${BUILD_ID:-$(date +"%y%m%d")}
    BUILD_DIR="build-${BUILD_ID}"
fi

CONF_DIR="conf"
DEPLOY_DIR="deploy"
STAGING_DIR="staging"
REPO_PACKAGES_DIR="packages.main"
REPOSITORY_DIR="${STAGING_DIR}/repository/${REPO_PACKAGES_DIR}"
IMAGES_DIR="${DEPLOY_DIR}/images"
CERTS_DIR="certs"

if [ -e "${TOP}/${BUILD_DIR}/${CONF_DIR}/openxt.conf" ]; then
    . "${TOP}/${BUILD_DIR}/${CONF_DIR}/openxt.conf"
    CONFIGURED=true
else
    CONFIGURED=false
fi

if $(eval "${command}_need_conf") && ! $CONFIGURED; then
    echo "Did not find a configuration for Build ${BUILD_ID}, please run config command" >&2
    usage 1
    exit 1
fi

if [ -d "${TOP}/${BUILD_DIR}" -a "${command}" != "config" ]; then
	pushd "${TOP}/${BUILD_DIR}" >/dev/null
fi

call_cmd ${command} $@
ret=$?

popd > /dev/null 2>&1

if [ $ret -ne 0 ]; then
    exit $ret
fi
